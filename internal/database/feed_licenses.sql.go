// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: feed_licenses.sql

package database

import (
	"context"
	"database/sql"
)

const createFeedLicense = `-- name: CreateFeedLicense :one
INSERT INTO feed_licenses (country, state_code, license_number)
VALUES (
    ?,
    ?,
    ?
)
ON CONFLICT(country, state_code, license_number) 
DO UPDATE SET
    license_number = EXCLUDED.license_number
RETURNING id
`

type CreateFeedLicenseParams struct {
	Country       sql.NullString
	StateCode     sql.NullString
	LicenseNumber sql.NullString
}

func (q *Queries) CreateFeedLicense(ctx context.Context, arg CreateFeedLicenseParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, createFeedLicense, arg.Country, arg.StateCode, arg.LicenseNumber)
	var id int64
	err := row.Scan(&id)
	return id, err
}
