// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: zips.sql

package database

import (
	"context"
	"database/sql"
)

const createZip = `-- name: CreateZip :one
INSERT INTO zips (zip_code)
VALUES (?)
ON CONFLICT(zip_code) DO NOTHING
RETURNING id
`

func (q *Queries) CreateZip(ctx context.Context, zipCode sql.NullString) (int64, error) {
	row := q.db.QueryRowContext(ctx, createZip, zipCode)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const getZipID = `-- name: GetZipID :one
SELECT id FROM zips 
WHERE zip_code = ? 
LIMIT 1
`

func (q *Queries) GetZipID(ctx context.Context, zipCode sql.NullString) (int64, error) {
	row := q.db.QueryRowContext(ctx, getZipID, zipCode)
	var id int64
	err := row.Scan(&id)
	return id, err
}
