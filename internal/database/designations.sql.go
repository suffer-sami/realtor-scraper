// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: designations.sql

package database

import (
	"context"
	"database/sql"
)

const createDesignation = `-- name: CreateDesignation :one
INSERT INTO designations (name)
VALUES (?)
ON CONFLICT(name) DO NOTHING
RETURNING id
`

func (q *Queries) CreateDesignation(ctx context.Context, name sql.NullString) (int64, error) {
	row := q.db.QueryRowContext(ctx, createDesignation, name)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const getDesignationID = `-- name: GetDesignationID :one
SELECT id FROM designations 
WHERE name = ? 
LIMIT 1
`

func (q *Queries) GetDesignationID(ctx context.Context, name sql.NullString) (int64, error) {
	row := q.db.QueryRowContext(ctx, getDesignationID, name)
	var id int64
	err := row.Scan(&id)
	return id, err
}
