// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: specializations.sql

package database

import (
	"context"
	"database/sql"
)

const createSpecialization = `-- name: CreateSpecialization :one
INSERT INTO specializations (name)
VALUES (?)
ON CONFLICT(name) DO NOTHING
RETURNING id
`

func (q *Queries) CreateSpecialization(ctx context.Context, name sql.NullString) (int64, error) {
	row := q.db.QueryRowContext(ctx, createSpecialization, name)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const getSpecializationID = `-- name: GetSpecializationID :one
SELECT id FROM specializations 
WHERE name = ? 
LIMIT 1
`

func (q *Queries) GetSpecializationID(ctx context.Context, name sql.NullString) (int64, error) {
	row := q.db.QueryRowContext(ctx, getSpecializationID, name)
	var id int64
	err := row.Scan(&id)
	return id, err
}
